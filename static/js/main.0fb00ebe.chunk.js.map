{"version":3,"sources":["components/Searchbar/Searchbar.jsx","services/pixabay-api.jsx","components/ImageGallery/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGalleryList/ImageGalleryList.jsx","components/Button/Button.jsx","components/Loader/Loader.jsx","components/Modal/Modal.jsx","components/ImageGallery/ImageGallery.jsx","App.js","index.js"],"names":["Searchbar","submit","useState","searchImageName","setSearchImageName","className","onSubmit","e","preventDefault","trim","toast","error","type","autoComplete","autoFocus","placeholder","value","onChange","currentTarget","toLowerCase","fetchImages","page","fetch","then","response","ok","json","ImageGalleryItem","image","webformatURL","tags","onModalOpen","onClick","src","alt","ImageGalleryList","images","map","id","Button","onBtnClick","LoaderSpinner","role","color","height","width","timeout","Modal","onModalClose","activeModalImg","largeImageURL","useEffect","window","addEventListener","handleKeyDown","removeEventListener","keyCode","target","Status","ImageGallery","setImages","setError","status","setStatus","showModal","setShowModal","loading","setLoading","setActiveModalImg","lastPage","setLastPage","loadImages","searchImgName","setTimeout","hits","total","imgs","newError","Error","scrollTo","top","document","documentElement","scrollHeight","behavior","catch","toggleModal","message","Loader","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0fb00ebe.chunk.js","sourcesContent":["import { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport PropTypes from 'prop-types';\n\nexport default function Searchbar({ submit }) {\n  const [searchImageName, setSearchImageName] = useState('');\n\n  const handleImageChange = ({ currentTarget: { value } }) => {\n    setSearchImageName(value.toLowerCase());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (searchImageName.trim() === '') {\n      return toast.error('What picture do you need?');\n    }\n\n    submit(searchImageName);\n    setSearchImageName('');\n  };\n\n  return (\n    <header className=\"Searchbar\">\n      <form className=\"SearchForm\" onSubmit={handleSubmit}>\n        <button type=\"submit\" className=\"SearchForm-button\">\n          <span className=\"SearchForm-button-label\">Search</span>\n        </button>\n\n        <input\n          className=\"SearchForm-input\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n          value={searchImageName}\n          onChange={handleImageChange}\n        />\n      </form>\n    </header>\n  );\n}\n\nSearchbar.propTypes = {\n  submit: PropTypes.func.isRequired,\n};\n","function fetchImages(searchImageName, page) {\n  const API_KEY = '22935349-f238c1b9d1a1a29229f76f105';\n\n  return fetch(\n    `https://pixabay.com/api/?q=${searchImageName}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`,\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n\n    return response;\n  });\n}\n\nexport default fetchImages;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ImageGalleryItem = ({\n  image: { webformatURL, tags },\n  image,\n  onModalOpen,\n}) => (\n  <li className=\"ImageGalleryItem\" onClick={() => onModalOpen(image)}>\n    <img src={webformatURL} alt={tags} className=\"ImageGalleryItem-image\" />\n  </li>\n);\nexport default ImageGalleryItem;\n\nImageGalleryItem.propTypes = {\n  image: PropTypes.shape({\n    webformatURL: PropTypes.string,\n    tags: PropTypes.string,\n  }).isRequired,\n  onModalOpen: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\n\nconst ImageGalleryList = ({ images, onModalOpen }) => (\n  <ul className=\"ImageGallery\">\n    {images.map(image => (\n      <ImageGalleryItem\n        key={`image-item-image-${image.id}`}\n        image={image}\n        onModalOpen={onModalOpen}\n      />\n    ))}\n  </ul>\n);\nexport default ImageGalleryList;\n\nImageGalleryList.propTypes = {\n  images: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    }),\n  ).isRequired,\n  onModalOpen: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Button = ({ onBtnClick }) => (\n  <button type=\"button\" className=\"Button\" onClick={onBtnClick}>\n    Load more...\n  </button>\n);\nexport default Button;\n\nButton.propTypes = {\n  onBtnClick: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nconst LoaderSpinner = () => (\n  <div role=\"alert\" className=\"loader\">\n    <Loader\n      type=\"MutatingDots\"\n      color=\"#3f51b5\"\n      height={100}\n      width={100}\n      timeout={2000}\n    />\n  </div>\n);\nexport default LoaderSpinner;\n","import { useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function Modal({\n  onModalClose,\n  activeModalImg: { largeImageURL, tags },\n}) {\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n\n    // очистить\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleKeyDown = e => {\n    if (e.keyCode === 27) {\n      onModalClose();\n    }\n  };\n\n  const handleBackdropClick = e => {\n    if (e.currentTarget === e.target) {\n      onModalClose();\n    }\n  };\n\n  return (\n    <div className=\"Overlay\" onClick={handleBackdropClick}>\n      <div className=\"Modal\">\n        <img src={largeImageURL} alt={tags} className=\"modalImg\" />\n      </div>\n    </div>\n  );\n}\n\nModal.propTypes = {\n  onModalClose: PropTypes.func.isRequired,\n  activeModalImg: PropTypes.shape({\n    largeImageURL: PropTypes.string,\n    tags: PropTypes.string,\n  }).isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport fetchImages from 'services/pixabay-api';\n\n\nimport ImageGalleryList from './ImageGalleryList/ImageGalleryList';\nimport Button from '../Button/Button';\nimport Loader from '../Loader/Loader';\nimport Modal from '../Modal/Modal';\n\nconst Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nexport default function ImageGallery({ searchImageName }) {\n  const [images, setImages] = useState([]);\n  const [error, setError] = useState(null);\n  const [status, setStatus] = useState(Status.IDLE);\n\n  const [showModal, setShowModal] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [activeModalImg, setActiveModalImg] = useState(null);\n  const [lastPage, setLastPage] = useState(1);\n\n  const loadImages = (searchImgName, page) => {\n    setLoading(true);\n    setLastPage(page);\n\n    setTimeout(() => {\n      fetchImages(searchImgName, page)\n        .then(({ hits, total }) => {\n          if (!total) {\n            const newError = new Error(\n              `There is no picture with ${searchImgName} name, please enter another request`,\n            );\n\n            setError(newError);\n            setStatus(Status.REJECTED);\n          } else {\n            setImages(imgs => [...(imgs || []), ...hits]);\n            setStatus(Status.RESOLVED);\n          }\n\n          if (page !== 1) {\n            setTimeout(() => {\n              window.scrollTo({\n                top: document.documentElement.scrollHeight,\n                behavior: 'smooth',\n              });\n            }, 0);\n          }\n        })\n        .catch(newError => {\n          setError(newError);\n          setStatus(Status.REJECTED);\n        });\n\n      setLoading(false);\n    }, 500);\n  };\n\n  const toggleModal = () => {\n    setShowModal(!showModal);\n  };\n\n  const onModalOpen = activeModalImg => {\n    setActiveModalImg(activeModalImg);\n    toggleModal();\n  };\n\n  const onBtnClick = () => {\n    setLoading(true);\n    loadImages(searchImageName, lastPage + 1);\n  };\n\n  useEffect(() => {\n    if (!searchImageName) {\n      return;\n    }\n\n    setImages([]);\n    setLoading(false);\n    loadImages(searchImageName, 1);\n  }, [searchImageName]);\n\n  if (status === Status.IDLE) {\n    return <div className=\"errorMessage\">Please enter your request</div>;\n  }\n\n\n  if (status === Status.REJECTED) {\n    return <h1>{error.message}</h1>;\n  }\n\n  if (status === Status.RESOLVED) {\n    return (\n      <>\n        <ImageGalleryList images={images} onModalOpen={onModalOpen} />\n\n        {loading && <Loader />}\n        <Button onBtnClick={onBtnClick} />\n\n        {showModal && (\n          <Modal onModalClose={toggleModal} activeModalImg={activeModalImg} />\n        )}\n      </>\n    );\n  }\n}\n\nImageGallery.propTypes = {\n  searchImageName: PropTypes.string.isRequired,\n};\n","import { useState } from 'react';\n\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport Searchbar from 'components/Searchbar/Searchbar';\nimport ImageGallery from 'components/ImageGallery/ImageGallery';\n\nimport './App.css';\n\nexport default function App() {\n  const [searchImageName, setSearchImageName] = useState('');\n  return (\n    <div className=\"App\">\n      <ToastContainer />\n      <Searchbar submit={setSearchImageName} />\n\n      <ImageGallery searchImageName={searchImageName} />\n    </div>\n  );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}